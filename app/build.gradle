import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

def getVersionCode = { ->
    return project.hasProperty('versionCode') ? versionCode.toInteger() : 19;
}

def getVersionName = { ->
    // version number properties are set by Teamcity, for local builds please supply correct defaults for major/minor
    Calendar calendar = Calendar.getInstance();
    calendar.setTime(new Date());
    SimpleDateFormat df_date = new SimpleDateFormat("yyDDDHHmm");
    String revision = getVersionCode() + "." + df_date.format(calendar.getTime());
    def major = project.hasProperty('versionNameMajor') ? versionNameMajor.toInteger() : 1
    def minor = project.hasProperty('versionNameMinor') ? versionNameMinor.toInteger() : 3
    def buildRevision = project.hasProperty('versionNameRevision') ? versionNameRevision.toInteger() : revision
    def name = String.format("%d.%d.%s", major, minor, buildRevision)
    println "VersionCode is set to $revision"
    println "VersionName is set to $name"
    return name
}

android {

    compileSdkVersion 31
    flavorDimensions 'default'

    lintOptions {
        checkOnly 'NewApi', 'HandlerLeak'
        baseline file("lint-baseline.xml")
        abortOnError false
    }

    signingConfigs {
        v1 {
            keyAlias 'v1'
            keyPassword 'lacodoma'
            storeFile file('keystore.jks')
            storePassword 'lacodoma'
        }
        v3 {
            keyAlias 'v3e'
            keyPassword 'lacodoma'
            storeFile file('keystore.jks')
            storePassword 'lacodoma'
        }
        rk328 {
            keyAlias 'rk328'
            keyPassword 'android'
            storeFile file('../other/customers/rk328/debug.keystore')
            storePassword 'android'
        }
        rk3399 {
            keyAlias 'keystore'
            keyPassword 'android'
            storeFile file('../other/customers/rk3399/keystore.jks')
            storePassword 'android'
        }
    }

    defaultConfig {
        applicationId "com.stinova.droidvnc_ng"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode getVersionCode()
        versionName getVersionName()
        signingConfig signingConfigs.v3

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                // exclude the other LibVNCServer targets
                targets "turbojpeg-static", "vncserver", "droidvnc-ng"
            }
        }

        ndk {
            debugSymbolLevel = 'FULL'
        }

    }

    productFlavors {
        v1 {
            signingConfig signingConfigs.v1
        }
        v3 {
            signingConfig signingConfigs.v3
        }
        rk328 {
            signingConfig signingConfigs.rk328
        }
        rk3399 {
            signingConfig signingConfigs.rk3399
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            version '3.10.2'
            path 'src/main/cpp/CMakeLists.txt'
        }
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation "io.reactivex.rxjava3:rxjava:3.0.8"
    implementation 'com.google.android.material:material:1.3.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

}
repositories {
    mavenCentral()
}